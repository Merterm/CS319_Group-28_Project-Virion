package ui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import gamemanagement.*;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

/**
 * CS319: Object-Oriented Software Engineering Course Project
 * Project Virion
 * Author: Mert İNAN on 8.12.2016.
 * Version: 1.1
 * Description: This is the MainMenu Panel for the UI package
 */
public class MainMenu extends JPanel {
    private JPanel menuPanel;
    private JButton playButton;
    private JButton highScoreButton;
    private JButton quitButton;
    private JTextPane logo;
    private JButton toggleMusicButton;
    private JButton helpButton;

    public static void main(String[] args) { //Automatically generated main method to test MainMenu
        JFrame frame = new JFrame("MainMenu");
        frame.setContentPane(new MainMenu().menuPanel);
        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        frame.pack();
        frame.setSize(1135, 710);
        frame.setVisible(true);
    }

    /** Default Constructor
     * Takes no parameters adds the mouseListeners to the buttons.
     */
    public MainMenu() {
        $$$setupUI$$$();
        playButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
            }
        });
        highScoreButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
            }
        });
        quitButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
            }
        });
        toggleMusicButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
            }
        });
        helpButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
            }
        });
    }

    /**Constructor for Launcher
     * Takes most of the controllers as parameters.
     * @param uiCntrl: is the user interface controller
     *               taken as a parameter. This is to be used as a Façade class.
     * @param engine: is the gameEngine class. Needed to start the game.
     * @param highScoreCntrl: used if the user clicks on highScoreButton.
     * @param iconMngr: can be used while getting icons, //TODO
     * @param musicCntrl: will be used if the user toggles the music.
     */
    public MainMenu(UIController uiCntrl, GameEngine engine, HighScoreManager highScoreCntrl,
                    IconManager iconMngr, MusicController musicCntrl) {
        // TODO We need to write a launcher class that contains all the controllers and the UI classes.
        $$$setupUI$$$();
        playButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
            }
        });
        highScoreButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
            }
        });
        quitButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
            }
        });
        toggleMusicButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
            }
        });
        helpButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
            }
        });
    }

    private void createUIComponents() {
        //Image img = new ImageIcon("/MenuScreen-Background.png").getImage();
        menuPanel = new JPanel() {
            @Override
            public void paintComponent(Graphics g) {
                super.paintComponent(g);
                g.drawImage(new ImageIcon("resources/MenuScreen-Background.png").getImage(), 0, 0, this);
            }
        };

        Dimension size = new Dimension(1135, 710);
        menuPanel.setPreferredSize(size);
        menuPanel.setMinimumSize(size);
        menuPanel.setMaximumSize(size);
        menuPanel.setSize(size);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        menuPanel.setLayout(new GridLayoutManager(5, 2, new Insets(30, 200, 30, 200), -1, -1));
        playButton = new JButton();
        playButton.setBackground(new Color(-14379403));
        playButton.setEnabled(true);
        playButton.setIcon(new ImageIcon(getClass().getResource("/MenuScreen-PlayButton.png")));
        playButton.setText("");
        playButton.setToolTipText("Start the Game");
        menuPanel.add(playButton, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(350, 87), new Dimension(350, 87), new Dimension(350, 87), 0, false));
        highScoreButton = new JButton();
        highScoreButton.setBackground(new Color(-14379403));
        highScoreButton.setEnabled(true);
        highScoreButton.setIcon(new ImageIcon(getClass().getResource("/MenuScreen-HighScoreButton.png")));
        highScoreButton.setText("");
        highScoreButton.setToolTipText("See High Scores");
        menuPanel.add(highScoreButton, new GridConstraints(2, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(350, 87), new Dimension(350, 87), new Dimension(350, 87), 0, false));
        quitButton = new JButton();
        quitButton.setBackground(new Color(-14379403));
        quitButton.setEnabled(true);
        quitButton.setIcon(new ImageIcon(getClass().getResource("/MenuScreen-QuitButton.png")));
        quitButton.setText("");
        menuPanel.add(quitButton, new GridConstraints(3, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(282, 72), new Dimension(282, 72), new Dimension(282, 72), 0, false));
        toggleMusicButton = new JButton();
        toggleMusicButton.setBackground(new Color(-14379403));
        toggleMusicButton.setEnabled(true);
        toggleMusicButton.setIcon(new ImageIcon(getClass().getResource("/MenuScreen-MusicButton.png")));
        toggleMusicButton.setText("");
        menuPanel.add(toggleMusicButton, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(76, 76), new Dimension(76, 76), new Dimension(76, 76), 0, false));
        helpButton = new JButton();
        helpButton.setBackground(new Color(-14379403));
        helpButton.setEnabled(true);
        helpButton.setIcon(new ImageIcon(getClass().getResource("/MenuScreen-HelpButton.png")));
        helpButton.setText("");
        menuPanel.add(helpButton, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(76, 76), new Dimension(76, 76), new Dimension(76, 76), 0, false));
        logo = new JTextPane();
        logo.setBackground(new Color(-1));
        logo.setEditable(false);
        logo.setEnabled(true);
        logo.setFont(new Font("Roboto", Font.PLAIN, 96));
        logo.setForeground(new Color(-14379403));
        logo.setText("Virion");
        menuPanel.add(logo, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, 50), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return menuPanel;
    }
}
