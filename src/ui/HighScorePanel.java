package ui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import gamemanagement.HighScoreManager;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.FileNotFoundException;

/**
 * CS319: Object-Oriented Software Engineering Course Project
 * Project Virion
 * Author: Mert Ä°NAN on 19.12.2016.
 * Version: 1.0
 * Description:
 */
public class HighScorePanel {
    public JPanel highScorePanel;
    private JTextPane titlePane;
    private JTextPane scoresPane;
    private JButton backButton;

    public static void main(String[] args) {
        JFrame frame = new JFrame("HighScorePanel");
        frame.setContentPane(new HighScorePanel().highScorePanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(1135, 710);
        frame.setVisible(true);
    }

    public HighScorePanel() {
        $$$setupUI$$$();
    }

    public HighScorePanel(final JPanel screens, final HighScoreManager highScoreManager) {
        $$$setupUI$$$();
        backButton.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                ((CardLayout) screens.getLayout()).show(screens, "MainMenu"); //Changes the panel in the screens
            }
        });
        try {
            scoresPane.setText(highScoreManager.readHighScoreList().toString());
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
    }

    private void createUIComponents() {
        highScorePanel = new JPanel() {
            @Override
            public void paintComponent(Graphics g) {
                super.paintComponent(g);
                g.drawImage(new ImageIcon("resources/HighScore-Background.png").getImage(), 0, 0, this);
            }
        };
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        highScorePanel.setLayout(new GridLayoutManager(4, 4, new Insets(0, 0, 0, 0), -1, -1));
        final Spacer spacer1 = new Spacer();
        highScorePanel.add(spacer1, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        titlePane = new JTextPane();
        titlePane.setBackground(new Color(-1));
        titlePane.setEditable(false);
        titlePane.setFont(new Font("Roboto", Font.PLAIN, 26));
        titlePane.setForeground(new Color(-1));
        titlePane.setOpaque(false);
        titlePane.setText("High Scores");
        highScorePanel.add(titlePane, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        backButton = new JButton();
        backButton.setBorderPainted(false);
        backButton.setContentAreaFilled(false);
        backButton.setIcon(new ImageIcon(getClass().getResource("/BackButton.png")));
        backButton.setOpaque(false);
        backButton.setText("");
        highScorePanel.add(backButton, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        highScorePanel.add(spacer2, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        highScorePanel.add(spacer3, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        scoresPane = new JTextPane();
        scoresPane.setBackground(new Color(-1));
        scoresPane.setEditable(false);
        scoresPane.setFont(new Font("Roboto", Font.PLAIN, 12));
        scoresPane.setForeground(new Color(-1));
        scoresPane.setOpaque(false);
        highScorePanel.add(scoresPane, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        final Spacer spacer4 = new Spacer();
        highScorePanel.add(spacer4, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer5 = new Spacer();
        highScorePanel.add(spacer5, new GridConstraints(1, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer6 = new Spacer();
        highScorePanel.add(spacer6, new GridConstraints(2, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return highScorePanel;
    }
}
